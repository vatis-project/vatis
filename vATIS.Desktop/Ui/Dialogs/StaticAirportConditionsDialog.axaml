<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="using:Vatsim.Vatis.Ui.ViewModels"
        xmlns:conv="using:Vatsim.Vatis.Ui.Converters"
        mc:Ignorable="d"
        x:Class="Vatsim.Vatis.Ui.Dialogs.StaticAirportConditionsDialog"
        Title="AirportConditionsDialog"
        x:Name="Window"
        Width="570" MaxHeight="325"
        SizeToContent="Height"
        WindowStartupLocation="CenterOwner"
        CanResize="False"
        ShowInTaskbar="False"
        SystemDecorations="None"
        TransparencyLevelHint="Transparent"
        Background="Transparent">
	<Window.Resources>
		<conv:BoolToBrushColorConverter x:Key="BoolToBrushColorConverter" TrueColor="Black" FalseColor="#646464"/>
		<SolidColorBrush x:Key="TreeDataGridSelectedCellBackgroundBrush" Color="Black" Opacity="0.3" />
	</Window.Resources>
	<Window.Styles>
		<Style Selector="DataValidationErrors">
			<Setter Property="Template">
				<ControlTemplate>
					<DockPanel LastChildFill="True">
						<ContentControl DockPanel.Dock="Bottom"
										ContentTemplate="{TemplateBinding ErrorTemplate}"
										DataContext="{TemplateBinding Owner}"
										Content="{Binding (DataValidationErrors.Errors)}"
										IsVisible="{Binding (DataValidationErrors.HasErrors)}"/>
						<ContentPresenter Name="PART_ContentPresenter"
										  Background="{TemplateBinding Background}"
										  BorderBrush="{TemplateBinding BorderBrush}"
										  BorderThickness="{TemplateBinding BorderThickness}"
										  CornerRadius="{TemplateBinding CornerRadius}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  Content="{TemplateBinding Content}"
										  Padding="{TemplateBinding Padding}"/>
					</DockPanel>
				</ControlTemplate>
			</Setter>
			<Setter Property="ErrorTemplate">
				<DataTemplate x:DataType="{x:Type x:Object}">
					<ItemsControl ItemsSource="{Binding}" Margin="0 5 0 0" Foreground="#FCBA03">
						<ItemsControl.Styles>
							<Style Selector="TextBlock">
								<Setter Property="TextWrapping" Value="Wrap" />
							</Style>
						</ItemsControl.Styles>
					</ItemsControl>
				</DataTemplate>
			</Setter>
		</Style>
	</Window.Styles>
	<Border BorderBrush="{Binding ShowOverlay, DataType=vm:StaticAirportConditionsDialogViewModel, Converter={StaticResource BoolToBrushColorConverter}, FallbackValue=#646464}" BorderThickness="1" Background="#323232" CornerRadius="5">
		<Grid>
			<Grid x:Name="Overlay" ZIndex="100" IsVisible="{Binding ShowOverlay, DataType=vm:StaticAirportConditionsDialogViewModel, FallbackValue=False}">
				<Border Background="#000000" Opacity="0.80"/>
			</Grid>
			<StackPanel Orientation="Vertical">
				<Border CornerRadius="5,5,0,0" Background="#282828" Height="40" PointerPressed="OnPointerPressed">
					<Grid ColumnDefinitions="1*,1*">
						<TextBlock Text="Airport Conditions" Padding="5" Margin="5,0,0,0" VerticalAlignment="Center" Foreground="#F0F0F0" FontWeight="Medium" FontSize="14" Grid.Column="0" />
						<Button Grid.Column="1" Theme="{StaticResource CloseButton}" HorizontalAlignment="Right" Margin="0,0,10,0" Command="{Binding CloseWindowCommand, DataType=vm:StaticAirportConditionsDialogViewModel}" CommandParameter="{Binding ElementName=Window}"/>
					</Grid>
				</Border>
				<StackPanel Margin="20">
					<StackPanel Orientation="Vertical">
						<Grid ColumnDefinitions="1*,10,80">
							<Border Grid.Column="0" Grid.ColumnSpan="3" BorderBrush="#646464" BorderThickness="1" CornerRadius="5" Height="40" IsVisible="{Binding !HasDefinitions, DataType=vm:StaticAirportConditionsDialogViewModel, FallbackValue=True}">
								<TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0">No Airport Conditions Defined</TextBlock>
							</Border>
							<!--TreeGrid-->
							<TreeDataGrid Grid.Column="0" CornerRadius="5" BorderBrush="#646464" BorderThickness="1" MinHeight="40" MaxHeight="200" Source="{Binding Source, DataType=vm:StaticAirportConditionsDialogViewModel, Mode=OneWay}" CanUserResizeColumns="False" CanUserSortColumns="False" IsVisible="{Binding HasDefinitions, DataType=vm:StaticAirportConditionsDialogViewModel, FallbackValue=False}">
								<TreeDataGrid.Styles>
									<Style Selector="TreeDataGrid /template/ Border#ColumnHeadersPresenterBorder">
										<Setter Property="IsVisible" Value="False"/>
									</Style>
									<Style Selector="TreeDataGrid /template/ Border#RootBorder">
										<Setter Property="Padding" Value="10"/>
									</Style>
									<Style Selector="TreeDataGridCheckBoxCell /template/ CheckBox">
										<Setter Property="Theme" Value="{StaticResource CheckBox}"/>
									</Style>
								</TreeDataGrid.Styles>
							</TreeDataGrid>
							<!--Up/Down Buttons-->
							<StackPanel Grid.Column="2" Orientation="Vertical" Spacing="5" IsVisible="{Binding HasDefinitions, DataType=vm:StaticAirportConditionsDialogViewModel, FallbackValue=False}">
								<Button Theme="{StaticResource Dark}" Command="{Binding MoveDefinitionUpCommand, DataType=vm:StaticAirportConditionsDialogViewModel}">Up</Button>
								<Button Theme="{StaticResource Dark}" Command="{Binding MoveDefinitionDownCommand, DataType=vm:StaticAirportConditionsDialogViewModel}">Down</Button>
							</StackPanel>
						</Grid>
					</StackPanel>
					<Grid ColumnDefinitions="1*,300" Margin="0,20,0,0">
						<StackPanel Grid.Column="0" Orientation="Horizontal" Spacing="5">
							<Button Theme="{StaticResource Dark}" Width="70" Height="26" Command="{Binding NewDefinitionCommand, DataType=vm:StaticAirportConditionsDialogViewModel}">New</Button>
							<Button Theme="{StaticResource Dark}" Width="70" Height="26" Command="{Binding EditDefinitionCommand, DataType=vm:StaticAirportConditionsDialogViewModel}">Edit</Button>
							<Button Theme="{StaticResource Dark}" Width="70" Height="26" Command="{Binding DeleteDefinitionCommand, DataType=vm:StaticAirportConditionsDialogViewModel}">Delete</Button>
						</StackPanel>
						<CheckBox Grid.Column="1"  HorizontalAlignment="Right" Theme="{StaticResource CheckBox}" IsChecked="{Binding IncludeBeforeFreeText, DataType=vm:StaticAirportConditionsDialogViewModel, FallbackValue=False}" ToolTip.Tip="When enabled, the selected definitions will be included before the free-form airport conditions text in the generated ATIS.&#x0a;&#x0a;Note: the selected definitions will always appear first in the main UI, regardless of whether this setting is checked.">Include before free-form Airport Conditions.</CheckBox>
					</Grid>
				</StackPanel>
			</StackPanel>
		</Grid>
	</Border>
</Window>
